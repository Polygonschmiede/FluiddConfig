[include fluidd.cfg]

# Klipper Konfigurationsdatei für Anycubic i3 MEGA S

[stepper_x]
step_pin: PF0
# Ursprünglicher dir_pin war PF1. Invertiert für gedrehtes Motorkabel.
# Kommentar aus Original-Vorlage: ## "!" for stock and TMC2208 with reversed plugs
dir_pin: !PF1 # Für TMC2209 mit um 180 Grad gedrehtem Kabel
enable_pin: !PD7
rotation_distance: 40 # Für GT2 Riemen, 2mm Pitch, 20 Zähne Pulley. Bitte später kalibrieren.
# Full_Steps_Per_Rotation: 200 # Klipper verwendet dies nicht direkt in der Config, wird intern angenommen oder aus microsteps/rotation_distance berechnet.
microsteps: 16
endstop_pin: ^!PE5 # Das ^! invertiert den Pin-Status, falls dein Endschalter das benötigt. Testen!
position_min: -5
position_endstop: -5 # Position, an der der Endschalter auslöst (relativ zu position_min, wenn negativ)
position_max: 210    # Maximaler Verfahrweg. Bitte prüfen und ggf. anpassen.
homing_speed: 30
homing_retract_dist: 5
second_homing_speed: 10

[stepper_y]
step_pin: PF6
# Ursprünglicher dir_pin war !PF7. Invertiert für gedrehtes Motorkabel.
# Kommentar aus Original-Vorlage: ## "" for stock and TMC2208 with reversed plugs
dir_pin: PF7 # Für TMC2209 mit um 180 Grad gedrehtem Kabel
enable_pin: !PF2
rotation_distance: 40 # Für GT2 Riemen, 2mm Pitch, 20 Zähne Pulley. Bitte später kalibrieren.
microsteps: 16
endstop_pin: ^!PL7 # Das ^! invertiert den Pin-Status. Testen!
position_endstop: 0
position_max: 210    # Maximaler Verfahrweg. Bitte prüfen und ggf. anpassen.
homing_speed: 50
homing_retract_dist: 5
second_homing_speed: 10

[stepper_z]
step_pin: PL3
dir_pin: PL1 # Für TMC2209 mit um 180 Grad gedrehtem Kabel
enable_pin: !PK0
rotation_distance: 8 # Für TR8*8 Gewindespindel (8mm Steigung). Bitte später kalibrieren.
microsteps: 16
# Für Z-Homing mit mechanischem Endschalter:
#endstop_pin: ^!PD3      # BLTOCH AUS Pin für den Z-Endschalter. Das ^! invertiert den Pin-Status. Testen!
#position_endstop: 0.0   # BLTOCH AUS Position, an der der Z-Endschalter auslöst.
# Für Z-Homing mit BLTouch/Probe (momentan auskommentiert):
endstop_pin: probe:z_virtual_endstop # Aktivieren, wenn BLTouch/Probe für Z-Homing genutzt wird
# position_min: -5 # Kann bei Verwendung eines Probes nützlich sein, um unter den Nullpunkt zu fahren
position_max: 210       # Maximaler Verfahrweg. Bitte prüfen und ggf. anpassen.
position_min: -2        # Erlaubt etwas negativen Verfahrweg für Z-Offset / Probing
homing_speed: 10
homing_retract_dist: 5
second_homing_speed: 3

[stepper_z1] # Zweiter Z-Motor (rechter Motor)
step_pin: PC1
dir_pin: PC3 # Für TMC2209 mit um 180 Grad gedrehtem Kabel
enable_pin: !PC7
rotation_distance: 8 # Für TR8*8 Gewindespindel (8mm Steigung). Bitte später kalibrieren.
microsteps: 16
# Kein eigener Endschalter für z1 bei den meisten i3 Mega S Konfigurationen,
# da beide Z-Motoren meist parallel angesteuert werden oder über einen Gleichlaufriemen verbunden sind.
# Die ursprüngliche Config hatte hier einen auskommentierten Endschalter:
# endstop_pin: ^!PL6

[extruder]
step_pin: PA4
# Ursprünglicher dir_pin war !PA6. Invertiert für gedrehtes Motorkabel.
# Kommentar aus Original-Vorlage: ## "" for stock and TMC2208 with reversed plugs
dir_pin: !PA6 # Für TMC2209 mit um 180 Grad gedrehtem Kabel
enable_pin: !PA2
rotation_distance: 7.26 # Startwert für den originalen i3 Mega S Extruder (Titan-Klon). Bitte GENAU kalibrieren!
                       # Der Wert 8 aus der Vorlage könnte auch passen, Kalibrierung ist entscheidend.
microsteps: 16
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PB4         # Pin für das Hotend-Heizelement
sensor_type: ATC Semitec 104GT-2 # Üblicher Thermistor für i3 Mega S Hotend. Prüfen!
sensor_pin: PK5         # Pin für den Hotend-Thermistor
min_temp: 0
max_temp: 285 # Sicherstellen, dass dein Hotend diese Temperatur aushält (PTFE Inliner?)
max_extrude_only_distance: 150.0
smooth_time: 1.0
min_extrude_temp: 180 # Sicherheitsfeature: Extruder bewegt sich nur, wenn Hotend heiß genug ist
pressure_advance: 0.38 # Aus der Vorlage. Bitte selbst kalibrieren für optimale Ergebnisse!
max_extrude_cross_section: 1.2 # Aus der Vorlage, sollte selten ein Problem sein.

# UART ----- START
# --- X ----------------------------------------------------

[heater_fan extruder_fan] # Lüfter am Hotend-Kühlkörper
pin: PL5
# max_power: 1.0
# shutdown_speed: 0
# cycle_time: default 0.100
# hardware_pwm: False
# kick_start_time: 0.100
# off_below: default 0.10
# tachometer_pin:
# tachometer_ppr:
# tachometer_poll_interval:
# enable_pin:
# heater: extruder # Um den Lüfter automatisch mit dem Extruder zu steuern (optional)
# heater_temp: 50.0 # Temperatur, ab der der Lüfter angeht (wenn heater gesetzt ist)

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F # Üblicher Thermistor für i3 Mega S Heizbett. Prüfen!
sensor_pin: PK6
min_temp: 0
max_temp: 110
smooth_time: 1.0
# control: pid # Wird durch SAVE_CONFIG unten gesetzt. Nach erstem Lauf PID Tuning machen!
# pid_Kp: XX.X # Wird durch PID_CALIBRATE und SAVE_CONFIG gesetzt
# pid_Ki: XX.X # Wird durch PID_CALIBRATE und SAVE_CONFIG gesetzt
# pid_Kd: XX.X # Wird durch PID_CALIBRATE und SAVE_CONFIG gesetzt

[fan] # Bauteillüfter
pin: PH6

[mcu]
# Beispiel: serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[virtual_sdcard]
path: ~/gcode_files # Das '~' steht für /home/hh, also /home/hh/gcode_files
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000 # Standardwert, kann nach Tests angepasst werden. Vorlage hatte 10000, was sehr hoch ist.
max_z_velocity: 10 # Vorlage hatte 20, beginne konservativ.
max_z_accel: 150   # Vorlage hatte 500, beginne konservativ.
square_corner_velocity: 5.0
# minimum_cruise_ratio: 0.5 das ist ein default wert

# [input_shaper]
# Für später: Zur Reduzierung von Ghosting/Ringing. Erfordert Kalibrierung mit einem Beschleunigungssensor
# oder durch Testdrucke. Die Werte aus der Vorlage unten im SAVE_CONFIG Block sind spezifisch
# für den Drucker, von dem die Vorlage stammt.
# shaper_freq_x: 85.0
# shaper_freq_y: 48.4
# shaper_type: MVZ

[heater_fan stepstick_fan] # Lüfter für die Schrittmotortreiber (falls vorhanden und steuerbar)
pin: PH4 # Pin prüfen, ob dieser Lüfter tatsächlich so angesteuert wird/werden kann



####################################################################
#  BLTouch
####################################################################
# --- BLTouch / Probe Konfiguration (momentan auskommentiert) ---
# Wenn du später einen BLTouch oder einen anderen Probe nachrüstest,
# kannst du diesen Abschnitt aktivieren und anpassen.
# Denke daran, auch 'endstop_pin: probe:z_virtual_endstop' in [stepper_z] zu aktivieren. !!!!!!!!!!!!!!!!!!!!!!!!
[bltouch]
sensor_pin: ^PD1
control_pin: PB5
x_offset: 0
y_offset: -65
stow_on_each_sample: True
probe_with_touch_mode: False
pin_up_touch_mode_reports_triggered: True
pin_move_time: 2.0
speed: 10
lift_speed: 10

[safe_z_home]
# Für später: Definiert eine sichere Home-Position in X(links rechts) Y (tiefe), bevor Z gehomt wird.
# Besonders nützlich mit Probes, um nicht außerhalb des Bettes zu homen.
home_xy_position: 0, 70   ; 5mm extra zur sicherheit
speed: 150
z_hop: 20 # Düse wird um diesen Wert angehoben, bevor XY bewegt wird
z_hop_speed: 10

# --- Mesh Bed Leveling (momentan auskommentiert) ---
[bed_mesh]
# Für später: BLTouch-basiertes Mesh Bed Leveling.
speed: 120
horizontal_move_z: 5
# X: von 10 mm (Sicherheitsrand) bis 200 mm
# Y: von 65 mm (BLTouch 65 mm hinter der Düse) bis 210 − 65 = 145 mm
mesh_min:   5,  5
mesh_max: 205,145
probe_count: 10,10 # Anzahl der Messpunkte in X und Y
algorithm: bicubic
fade_start: 1.0
fade_end: 10.0 # Über wie viele mm in Z das Mesh ausgefaded wird

[force_move]
enable_force_move: True # Erlaubt das Bewegen der Achsen vor dem Homing mittels SET_KINEMATIC_POSITION

[virtual_sdcard]
path: /home/hh/printer_data/gcodes


[output_pin BEEPER_pin] # Für den Piezo-Beeper auf dem Board
pin: PC6 # Pin des Beepers (prüfen, ob dieser Pin korrekt ist für Trigorilla)
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
# scale: 1000 # Aus der Vorlage, oft nicht nötig bei pwm=True für Beeper

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|float %} # Frequenz in Hz
    {% set P = params.P|default(100)|float %}  # Dauer in ms
    {% if S > 0 %}
        SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S } # Beeper an mit 50% Duty Cycle und gewünschter Frequenz
        G4 P{P} # Wartezeit
        SET_PIN PIN=BEEPER_pin VALUE=0 # Beeper aus
    {% else %}
        # Optional: Wenn S=0 ist, einfach nur den Pin ausschalten oder nichts tun
        SET_PIN PIN=BEEPER_pin VALUE=0
    {% endif %}

[display_status] # Notwendig für die Anzeige von M117 Nachrichten auf dem Display/UI

[pause_resume] # Ermöglicht PAUSE, RESUME, CANCEL_PRINT Befehle

[firmware_retraction] # Ermöglicht G10/G11 Retraction
retract_length: 5 # Beispielwert, an deinen Extruder/Hotend anpassen
retract_speed: 40 # Beispielwert
unretract_extra_length: 0 # Beispielwert
unretract_speed: 30 # Beispielwert

[gcode_macro m205]
gcode:

[gcode_macro M600] # Filamentwechsel-Makro
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91 # Relative Positionierung
    G1 E-1 F2700 # Kleiner Retract
    G1 Z{Z} F900 # Hebe Z an
    G90 # Absolute Positionierung
    G1 X{X} Y{Y} F3000 # Fahre zur Parkposition
    G91 # Relative Positionierung
    G1 E-50 F1000 # Langer Retract zum Filament entfernen
    RESTORE_GCODE_STATE NAME=M600_state
    # Hier könnte ein M300 Beep eingefügt werden, um auf den notwendigen Wechsel hinzuweisen

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_extrude: 1.0
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVELIFT=1 ; MOVELIFT=1 kann bei Klipper neuer sein
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    # SDCARD_RESET_FILE  # Auskommentiert oder entfernt
    G91
    G1 E-1 F2700 # Kleiner Retract
    G1 Z10 F900  # Hebe Z an
    G90
    G1 X0 Y{printer.toolhead.axis_maximum.y} F3000 # Fahre X auf Min, Y auf Max (hinten)
    M84 # Motoren ausschalten
    BASE_CANCEL_PRINT

[gcode_macro START_PRINT]
# Dieses Makro wird im Slicer als Start-GCode verwendet.
# Beispiel: START_PRINT BED_TEMP=60 EXTRUDER_TEMP=200
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    M140 S{BED_TEMP} # Heizbett Temperatur setzen und nicht warten
    M104 S{EXTRUDER_TEMP} # Hotend Temperatur setzen und nicht warten
    G28 # Home alle Achsen
    M190 S{BED_TEMP} # Warten bis Heizbett Temperatur erreicht ist
    M109 S{EXTRUDER_TEMP} # Warten bis Hotend Temperatur erreicht ist
    G1 Z0.2 F3000 # Düse leicht über das Bett bewegen (oder Z-Offset hier einrechnen)
    G92 E0 # Extruder auf Null setzen
    G1 X5 Y10 Z0.3 F5000.0 ; Prime line start
    G1 X5 Y150 Z0.3 F1000.0 E10 ; Draw the first line
    G1 X5.3 Y150 Z0.3 F5000.0 ; Move to side a little
    G1 X5.3 Y10 Z0.3 F1000.0 E20 ; Draw the second line
    G92 E0 # Extruder wieder auf Null setzen
    M117 Druck gestartet...

[gcode_macro END_PRINT]
# Dieses Makro wird im Slicer als End-GCode verwendet.
gcode:
    M400 # Warte auf Abarbeitung aller Bewegungen
    G91 # Relative Positionierung
    G1 E-1 F2700 # Kleiner Retract
    G1 Z10 F3000 # Düse 10mm anheben
    G90 # Absolute Positionierung
    G1 X0 Y{printer.toolhead.axis_maximum.y - 10} F3000 # Fahre Bett nach vorne, Düse nach hinten links
    TURN_OFF_HEATERS
    M107 # Bauteillüfter aus
    M84 X Y E # Motoren X, Y, E ausschalten (Z bleibt oft an, um Absacken zu verhindern)
    M117 Druck beendet!
    M300 # Kurzer Beep am Ende

# Der folgende Block wird von Klipper automatisch verwaltet (z.B. nach PID Tuning, Bed Mesh).
# Nicht manuell bearbeiten, außer du weißt genau, was du tust.
# Die Werte hier überschreiben die Einstellungen in den Hauptsektionen, wenn 'control = pid' dort nicht auskommentiert ist
# oder wenn ein Mesh geladen wird.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 73.183
#*# pid_ki = 3.253
#*# pid_kd = 411.656
#*# control = pid
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_type_y = 3hump_ei
#*#
#*# [extruder]
#*# pid_kp = 25.666
#*# pid_ki = 1.267
#*# pid_kd = 129.932
#*# control = pid
#*#
#*# [bltouch]
#*# z_offset = 3.225
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.040000, 0.337500, 0.387500, 0.207500, -0.107500
#*# 	0.042500, 0.355000, 0.430000, 0.262500, -0.102500
#*# 	0.085000, 0.367500, 0.427500, 0.277500, -0.090000
#*# 	0.070000, 0.352500, 0.435000, 0.282500, -0.112500
#*# 	0.090000, 0.365000, 0.430000, 0.257500, -0.157500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 205.0
#*# min_y = 5.0
#*# max_y = 145.0
